class Baggage:
    def __init__(self, baggage_id, owner, location, status):
        self.baggage_id = baggage_id
        self.owner = owner
        self.location = location
        self.status = status

    def update_location(self, new_location):
        self.location = new_location

    def update_status(self, new_status):
        self.status = new_status

    def __str__(self):
        return f"Baggage ID: {self.baggage_id}, Owner: {self.owner}, Location: {self.location}, Status: {self.status}"


class BaggageTrackingSystem:
    def __init__(self):
        self.baggage_dict = {}

    def add_baggage(self, baggage_id, owner, location, status):
        if baggage_id in self.baggage_dict:
            print(f"Baggage ID {baggage_id} already exists.")
        else:
            self.baggage_dict[baggage_id] = Baggage(baggage_id, owner, location, status)
            print(f"Baggage {baggage_id} added.")

    def update_baggage(self, baggage_id, location=None, status=None):
        if baggage_id in self.baggage_dict:
            if location:
                self.baggage_dict[baggage_id].update_location(location)
            if status:
                self.baggage_dict[baggage_id].update_status(status)
            print(f"Baggage {baggage_id} updated.")
        else:
            print(f"Baggage ID {baggage_id} not found.")

    def get_baggage_info(self, baggage_id):
        if baggage_id in self.baggage_dict:
            return str(self.baggage_dict[baggage_id])
        else:
            return f"Baggage ID {baggage_id} not found."

    def list_all_baggage(self):
        if self.baggage_dict:
            return "\n".join([str(bag) for bag in self.baggage_dict.values()])
        else:
            return "No baggage found."


def main():
    system = BaggageTrackingSystem()

    while True:
        print("\nBaggage Tracking System")
        print("1. Add Baggage")
        print("2. Update Baggage")
        print("3. View Baggage Info")
        print("4. List All Baggage")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == "1":
            baggage_id = input("Enter Baggage ID: ")
            owner = input("Enter Owner: ")
            location = input("Enter Current Location: ")
            status = input("Enter Status: ")
            system.add_baggage(baggage_id, owner, location, status)

        elif choice == "2":
            baggage_id = input("Enter Baggage ID to update: ")
            location = input("Enter New Location (leave blank to skip): ")
            status = input("Enter New Status (leave blank to skip): ")
            system.update_baggage(baggage_id, location or None, status or None)

        elif choice == "3":
            baggage_id = input("Enter Baggage ID to view: ")
            print(system.get_baggage_info(baggage_id))

        elif choice == "4":
            print(system.list_all_baggage())

        elif choice == "5":
            print("Exiting the system.")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
